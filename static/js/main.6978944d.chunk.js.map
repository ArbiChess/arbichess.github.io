{"version":3,"sources":["logo.png","utils/helper.js","utils/hooks.js","utils/store.js","utils/tools.js","wallet/tools.js","wallet/wallet.js","wallet/index.js","utils/operation.js","utils/format.js","utils/input.js","App.js","reportWebVitals.js","index.js"],"names":["isEqual","FastDeepEqual","hasString","value","_","isString","isEmpty","hasNumber","isNumber","isFinite","isNaN","hasPlainObject","isPlainObject","hasValue","isNil","hasFunction","isFunction","getValue","object","path","get","defaultValues","find","mergeDeep","obj","init","reduce","acc","key","isBoolean","isNull","isUndefined","isSymbol","cloneDeep","mergeObject","sources","res","src","useModel","model","React","useRef","current","setAddress","localStorage","setItem","waitForSth","fnWhenSthHasValue","maxAttempts","delay","Promise","resolve","reject","attempts","uInterval","Error","ret","func","args","timer","callback","error","then","isContinue","window","setTimeout","clearTimeout","MAX_UINT256","Ethers","constants","MaxUint256","ETH_TOKEN_ADDRESS","ETH_TOKEN_DECIMALS","calcGasLimit","gasLimit","mul","div","newWeb3Provider","a","ethereum","web3Provider","providers","Web3Provider","createHookContext","WalletModel","useHook","defaultValue","Context","createContext","displayName","Provider","props","children","others","useContext","ethersProvider","useState","network","setNetwork","address","disconnect","useCallback","_setAddress","handleAccountsChanged","accounts","handleDisconnect","handleReload","location","reload","install","provider","off","on","connect","enable","getNetwork","chainId","name","listAccounts","allowance","tokenAddress","spenderAddress","getSigner","signer","getAddress","contract","Contract","ERC20Abi","decimals","response","utils","formatUnits","approve","estimateGas","overrides","balanceOf","balance","getBalance","stakeBalanceOf","contractAddress","AChessRewardsAbi","stakedToken","stakeToken","stakeTokenContract","stakeTokenInfo","symbol","_stakeBalance","totalSupply","_totalStaked","walletBalance","_allowance","stakeBalance","totalStaked","stake","parseUnits","_value","result","withdraw","earned","rewardToken","rewardTokenContract","claim","totalClaimed","userClaimed","BigNumber","config","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","BLANK_CHAR","isBlankChar","isNumeric","test","getNumberValue","toNumber","generateOperationFn","op","x","y","toString","safeOperationFn","isBigNumber","X","Y","safeSub","generateCompareFn","err","bigGreaterThan","bigGreaterThanOrEqualTo","bigLessThan","bigToFixed","dp","rm","toFixed","operationFn","bigNumberFormat","options","approximate","thousands","prefix","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","suffix","formatNumber4Loans","opts","places","nilDisabled","fmt","number","decimalPlaces","toFormat","formatNumberInputValue","precision","min","max","step01","replace","step02","split","step03","length","join","slice","step04","step05","substring","step06","step07","TARGET_CHAINID","Header","memo","handleClick","text","includes","mode","maxLength","over","startAt","ellipsizeText","className","logo","alt","type","onClick","Pool","data","verify","alert","setStakeToken","earn","setEarn","fn","cancel","loop","cancelTimer","useEffect","useIntervalRefresh","_stakeToken","_earn","_claimed","stakeAmount","setStakeAmount","handleStakeInput","event","trim","handleStakeAll","withdrawAmount","setWithdrawAmount","handleWithdrawInput","handleWithdrawAll","handleApprove","tx","wait","message","handleStake","handleWithdraw","handleClaim","stakeSymbol","approveVerify","noneedApprove","disabled","onChange","extra","Footer","style","padding","href","target","rel","AutoConnect","getItem","App","pools","map","pool","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6978944d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.beb2357e.png\";","import _ from 'lodash';\nimport React from 'react';\n// import PathToRegexp from 'path-to-regexp';\n// import FastDeepEqual from 'fast-deep-equal/es6/react';\nimport { dequal as FastDeepEqual } from 'dequal';\n\n// const TypeOf = type => object => Object.prototype.toString.call(object) === `[object ${type}]`;\n\n// const isString = TypeOf('String');\n// const isObject = TypeOf('Object');\n// const isFunction = TypeOf('Function');\n// export const isBlob = TypeOf('Blob');\n\nexport const isPrimitive = val => val !== Object(val);\n\nexport const isEqual = FastDeepEqual;\n\nexport const isMouseOutInside = (element, event) => {\n    if (!element) {\n        return false;\n    }\n\n    if (element === event.target) {\n        return true;\n    }\n\n    for (let i = 0; i < element.childNodes.length; i++) {\n        const node = element.childNodes[i];\n        const inside = isMouseOutInside(node, event);\n        if (inside) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nexport const noop = () => {};\n\nexport function hasString(value) {\n    return _.isString(value) && !_.isEmpty(value);\n}\n\nexport function hasNumber(value) {\n    return _.isNumber(value) && _.isFinite(value) && !_.isNaN(value);\n}\n\nexport function hasDate(value) {\n    return _.isDate(value);\n}\n\nexport function hasArray(value) {\n    return _.isArray(value) && !_.isEmpty(value);\n}\n\nexport function hasPlainObject(value) {\n    return _.isPlainObject(value) && !_.isEmpty(value);\n}\n\nexport function hasValue(value) {\n    return !_.isNil(value);\n}\n\nexport function hasBoolean(value) {\n    return _.isBoolean(value);\n}\n\nexport function hasFunction(value) {\n    return _.isFunction(value);\n}\n\nexport function hasStringThen(value, trueResult, falseResult) {\n    return ifCall(value, hasString, trueResult, falseResult);\n}\n\nexport function hasArrayThen(value, trueResult, falseResult) {\n    return ifCall(value, hasArray, trueResult, falseResult);\n}\n\nexport function hasPlainObjectThen(value, trueResult, falseResult) {\n    return ifCall(value, hasPlainObject, trueResult, falseResult);\n}\n\nexport function hasValueThen(value, trueResult, falseResult) {\n    return ifCall(value, hasValue, trueResult, falseResult);\n}\n\nexport function hasFunctionCall(value, ...args) {\n    return hasFunction(value) ? value(...args) : value;\n}\n\n// eslint-disable-next-line max-params\nexport function ifCall(value, condition, trueResult, falseResult) {\n    if (hasFunction(condition)) {\n        if (condition(value)) {\n            return hasFunction(trueResult) ? trueResult(value) : trueResult;\n        } else {\n            return hasFunction(falseResult) ? falseResult(value) : falseResult;\n        }\n    } else {\n        if (condition) {\n            return hasFunction(trueResult) ? trueResult(value) : trueResult;\n        } else {\n            return hasFunction(falseResult) ? falseResult(value) : falseResult;\n        }\n    }\n}\n\nexport function getValue(object, path, ...defaultValues) {\n    const value = _.get(object, path);\n    if (hasValue(value)) {\n        return value;\n    }\n\n    return _.find(defaultValues, hasValue);\n}\n\nexport function findValue(object, ...paths) {\n    for (const path of paths) {\n        const value = _.get(object, path);\n        if (hasValue(value)) {\n            return value;\n        }\n    }\n\n    return null;\n}\n\nexport function mergeDeep(obj, init = {}) {\n    return _.reduce(\n        obj,\n        (acc, value, key) => {\n            if (\n                _.isString(value) ||\n                _.isNumber(value) ||\n                _.isBoolean(value) ||\n                _.isNull(value) ||\n                _.isUndefined(value) ||\n                _.isSymbol(value) ||\n                _.isFunction(value)\n            ) {\n                acc[key] = value;\n            } else if (hasPlainObject(value) && hasPlainObject(acc[key])) {\n                acc[key] = mergeDeep(value, acc[key]);\n            } else {\n                acc[key] = _.cloneDeep(value);\n            }\n            return acc;\n        },\n        init\n    );\n}\n\nexport function mergeObject(object, ...sources) {\n    if (!_.isPlainObject(object)) {\n        return;\n    }\n\n    return _.reduce(sources, (res, src) => (hasPlainObject(src) ? mergeDeep(src, res) : res), object);\n}\n\nexport function flattenObject(obj, depth, prefix = '') {\n    const limit = _.isInteger(depth);\n    return _.reduce(\n        _.keys(obj),\n        (acc, k) => {\n            const pre = prefix.length ? prefix + '.' : '';\n            if ((limit ? depth > 1 : true) && hasPlainObject(obj[k])) {\n                _.assign(acc, flattenObject(obj[k], limit ? depth - 1 : depth, pre + k));\n            } else {\n                acc[pre + k] = obj[k];\n            }\n            return acc;\n        },\n        {}\n    );\n}\n\n// export function generateSubscriptionByRoutes(routes) {\n//   const pathName = _.keys(routes);\n//   // const asyncCall = fn => (...args) => window.setTimeout(() => fn(...args));\n//   if (!hasPlainObject(routes)) {\n//     return;\n//   }\n\n//   return ({ dispatch, history }, onError) => {\n//     let prevPathName = null;\n//     // eslint-disable-next-line complexity\n//     return history.listen((location, action) => {\n//       const { pathname: currPathName } = location;\n//       const event = { location, action, dispatch, onError };\n\n//       if (prevPathName === currPathName) {\n//         return;\n//       }\n\n//       for (let i = 0; i < pathName.length; i++) {\n//         const path = pathName[i];\n//         // console.log('\\t@path:', path, '\\t@prevPathName:', prevPathName, '\\t@currPathName:', currPathName);\n\n//         const regexp = PathToRegexp(path);\n//         const prevMatch = regexp.exec(prevPathName);\n//         const currMatch = regexp.exec(currPathName);\n//         // console.log('\\t@prevMatch:', prevMatch, '\\t@currMatch:', currMatch);\n\n//         // 原地变参\n//         if (hasArray(prevMatch) && hasArray(currMatch) && prevMatch.length === currMatch.length) {\n//           // const prev = routes[prevMatch.length > 1 ? path : prevPathName];\n//           // if (hasPlainObject(prev) && hasFunction(prev.onLeave)) {\n//           //   asyncCall(prev.onLeave)(_.assign({}, event, { match: prevMatch }), prev.context)\n//           //     .then(() => {\n//           //       prev.context = {};\n//           //     })\n//           //     .catch(onError);\n//           // }\n\n//           const curr = routes[currMatch.length > 1 ? path : currPathName];\n//           if (hasPlainObject(curr) && hasFunction(curr.onChange)) {\n//             // curr.context = {};\n//             asyncCall(curr.onChange)(_.assign({}, event, { match: currMatch }), curr.context).catch(onError);\n//           }\n\n//           continue;\n//         }\n\n//         // 离开\n//         if (hasArray(prevMatch) && currMatch === null) {\n//           const prev = routes[prevMatch.length > 1 ? path : prevPathName];\n//           if (hasPlainObject(prev) && hasFunction(prev.onLeave)) {\n//             asyncCall(prev.onLeave)(_.assign({}, event, { match: prevMatch }), prev.context)\n//               .then(() => {\n//                 prev.context = {};\n//               })\n//               .catch(onError);\n//           }\n\n//           continue;\n//         }\n\n//         // 进入\n//         if (prevMatch === null && hasArray(currMatch)) {\n//           const curr = routes[currMatch.length > 1 ? path : currPathName];\n//           if (hasPlainObject(curr) && hasFunction(curr.onEnter)) {\n//             curr.context = {};\n//             asyncCall(curr.onEnter)(_.assign({}, event, { match: currMatch }), curr.context).catch(onError);\n//           }\n\n//           continue;\n//         }\n//       }\n\n//       prevPathName = currPathName;\n//     });\n//   };\n// }\n\nexport function asyncCall(fn, timeout = 0) {\n    return (...args) =>\n        new Promise((resolve, reject) =>\n            // eslint-disable-next-line no-promise-executor-return\n            window.setTimeout(() => {\n                try {\n                    resolve(fn(...args));\n                } catch (error) {\n                    reject(error);\n                }\n            }, timeout)\n        );\n}\n\nexport function memoComponent(fnComponent, propsAreEqual = FastDeepEqual) {\n    return React.memo(fnComponent, propsAreEqual);\n}\n\nexport function mapObject(obj, fn) {\n    if (!_.isObject(obj) || !_.isFunction(fn)) {\n        return obj;\n    }\n    let result = {};\n    Object.keys(obj).forEach(key => {\n        const value = obj[key];\n        result[key] = fn(value);\n    });\n    return result;\n}\n\nexport function getRandomLengthString(len = 10) {\n    let str = Math.random().toString(36).substring(2);\n\n    while (str.length < len) {\n        str += Math.random().toString(36).substring(2);\n    }\n\n    return str.substring(0, len);\n}\n","import React from 'react';\nimport { isEqual } from './helper';\n\nexport function useModel(value) {\n    const model = React.useRef();\n    if (!isEqual(model.current, value)) {\n        model.current = value;\n    }\n    return model.current;\n}\n\nexport function createHookContext(useHook, defaultValue) {\n    const Context = React.createContext(defaultValue);\n    Context.displayName = 'HookContext';\n\n    const Provider = (props = {}) => {\n        const { children, ...others } = props;\n        const value = useHook(others);\n        return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    const useContext = () => React.useContext(Context);\n\n    return { Provider, useContext };\n}\n","export function setAddress(value) {\n    return localStorage.setItem('address', value);\n}\n\nexport function getAddress() {\n    return localStorage.getItem('address') ?? '';\n}\n","import { hasFunction } from '../utils/helper';\n\nexport const waitForSth = (fnWhenSthHasValue, maxAttempts = 10, delay = 100) =>\n    new Promise((resolve, reject) => {\n        let attempts = 0;\n        uInterval(() => {\n            if (attempts >= maxAttempts) {\n                reject(new Error('Not Found'));\n                return false;\n            }\n\n            const ret = fnWhenSthHasValue(attempts);\n            if (ret) {\n                resolve(ret);\n                return false;\n            } else {\n                attempts++;\n                return true;\n            }\n        }, delay);\n    });\n\nexport function uInterval(func, delay, ...args) {\n    let timer = null;\n\n    const callback = (...params) => {\n        timer = null;\n\n        let ret = null;\n        try {\n            ret = func(...params);\n        } catch (error) {\n            // console.error(error);\n            return;\n        }\n\n        if (ret && hasFunction(ret.then)) {\n            ret.then(isContinue => {\n                if (isContinue === true) {\n                    // 第 N 次延时执行\n                    timer = window.setTimeout(callback, delay, ...args);\n                }\n            });\n            return;\n        }\n\n        if (ret === true) {\n            // 第 N 次延时执行\n            timer = window.setTimeout(callback, delay, ...args);\n        }\n    };\n\n    // 立即执行一次\n    callback(...args);\n\n    // 第一次延时执行\n    // timer = window.setTimeout(callback, delay, ...args);\n\n    return () => {\n        if (timer) {\n            window.clearTimeout(timer);\n        }\n\n        timer = null;\n    };\n}\n","import React from 'react';\nimport { ethers as Ethers } from 'ethers';\nimport { hasFunction, isEqual } from '../utils/helper';\nimport { uInterval } from '../utils/tools';\n\nexport const MAX_UINT256 = Ethers.constants.MaxUint256;\n\nexport const ETH_TOKEN_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const ETH_TOKEN_DECIMALS = 18;\n\nexport function calcGasLimit(gasLimit) {\n    // let result = Ethers.BigNumber.from(gasLimit);\n    // console.log(gasLimit);\n    // return result.mul(1.2);\n    return gasLimit.mul(12).div(10);\n}\n\nexport const REFRESH_INTERVAL = 10 * 1000;\nexport const useIntervalRefresh = (fn, delay = REFRESH_INTERVAL) => {\n    const timer = React.useRef({ cancel: null, loop: null });\n\n    const cancelTimer = React.useCallback(() => {\n        const { cancel } = timer.current;\n        if (hasFunction(cancel)) {\n            cancel();\n        }\n        timer.current.cancel = null;\n    }, []);\n\n    if (!isEqual(timer.current.loop, fn)) {\n        timer.current.loop = fn;\n        if (hasFunction(fn)) {\n            cancelTimer();\n            timer.current.cancel = uInterval(async () => {\n                try {\n                    await timer.current.loop();\n                    return true;\n                } catch (error) {\n                    return false;\n                }\n            }, delay);\n        }\n    }\n\n    React.useEffect(() => {\n        return cancelTimer;\n    }, [cancelTimer]);\n};\n","import React from 'react';\nimport { ethers as Ethers } from 'ethers';\n\nimport { createHookContext, useModel } from '../utils/hooks';\nimport { hasString, hasValue } from '../utils/helper';\nimport { setAddress as _setAddress } from '../utils/store';\nimport { waitForSth } from '../utils/tools';\nimport { MAX_UINT256, ETH_TOKEN_ADDRESS, ETH_TOKEN_DECIMALS, calcGasLimit } from './tools';\n\nimport ERC20Abi from './abi/ERC20.json';\nimport AChessRewardsAbi from './abi/AChessRewards.json';\n\nexport async function newWeb3Provider(props = {}) {\n    let web3Provider;\n    const ethereum = await waitForSth(() => window.ethereum, 30);\n    // console.log(ethereum.on);\n    web3Provider = new Ethers.providers.Web3Provider(ethereum);\n    return web3Provider;\n}\n\nfunction useWalletModel(props = {}) {\n    // const { connect, disconnect, network, address, ethereum } = useProvider();\n\n    const ethersProvider = React.useRef();\n    const [network, setNetwork] = React.useState();\n    const [address, setAddress] = React.useState();\n\n    const disconnect = React.useCallback(async () => {\n        setAddress(null);\n        _setAddress('');\n    }, []);\n\n    const handleAccountsChanged = React.useCallback(async accounts => {\n        setAddress(accounts[0]);\n    }, []);\n\n    const handleDisconnect = React.useCallback(async () => {\n        await disconnect();\n    }, [disconnect]);\n\n    const handleReload = React.useCallback(async () => {\n        window.location.reload();\n    }, []);\n\n    const install = React.useCallback(async () => {\n        let web3Provider = ethersProvider.current;\n\n        if (hasValue(web3Provider?.provider?.off)) {\n            web3Provider.provider.off('chainChanged', handleReload);\n            web3Provider.provider.off('accountsChanged', handleAccountsChanged);\n            web3Provider.provider.off('disconnect', handleDisconnect);\n        }\n\n        web3Provider = await newWeb3Provider();\n\n        web3Provider.provider.on('chainChanged', handleReload);\n        web3Provider.provider.on('accountsChanged', handleAccountsChanged);\n        web3Provider.provider.on('disconnect', handleDisconnect);\n\n        // const { chainId, name } = await web3Provider.getNetwork();\n        // setNetwork({ chainId, name });\n\n        // const accounts = await web3Provider.listAccounts();\n        // setAddress(accounts[0]);\n\n        ethersProvider.current = web3Provider;\n    }, [handleAccountsChanged, handleDisconnect, handleReload]);\n\n    const connect = React.useCallback(async () => {\n        ethersProvider.current = null;\n        await install();\n        const ethereum = await waitForSth(() => ethersProvider.current, 30);\n        await ethereum.provider.enable();\n        const { chainId, name } = await ethereum?.getNetwork();\n        setNetwork({ chainId, name });\n        const accounts = await ethereum?.listAccounts();\n        setAddress(accounts[0]);\n        _setAddress(accounts[0]);\n    }, [install]);\n\n    const allowance = React.useCallback(async (tokenAddress, spenderAddress) => {\n        if (!hasString(spenderAddress)) {\n            return;\n        }\n        if (!hasString(tokenAddress) || tokenAddress === ETH_TOKEN_ADDRESS) {\n            return MAX_UINT256;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n        const address = await signer.getAddress();\n\n        const contract = new Ethers.Contract(tokenAddress, ERC20Abi, signer);\n        const allowance = await contract.allowance(address, spenderAddress);\n\n        const decimals = await contract.decimals();\n        const response = Ethers.utils.formatUnits(allowance, decimals);\n        return response;\n    }, []);\n\n    const approve = React.useCallback(async (tokenAddress, spenderAddress, value) => {\n        if (!hasString(tokenAddress)) {\n            return;\n        }\n        if (!hasString(spenderAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n\n        const contract = new Ethers.Contract(tokenAddress, ERC20Abi, signer);\n        const gasLimit = await contract.estimateGas.approve(spenderAddress, value);\n\n        const overrides = {\n            gasLimit: calcGasLimit(gasLimit),\n            // gasPrice: ,\n        };\n        const response = await contract.approve(spenderAddress, value, overrides);\n        return response;\n    }, []);\n\n    const balanceOf = React.useCallback(async tokenAddress => {\n        let balance = null;\n        let decimals = ETH_TOKEN_DECIMALS;\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n        const address = await signer.getAddress();\n\n        if (tokenAddress === ETH_TOKEN_ADDRESS) {\n            balance = await signer.getBalance('latest');\n        } else {\n            const contract = new Ethers.Contract(tokenAddress, ERC20Abi, signer);\n            balance = await contract.balanceOf(address);\n            decimals = await contract.decimals();\n        }\n        const response = Ethers.utils.formatUnits(balance, decimals);\n        return response;\n    }, []);\n\n    const stakeBalanceOf = React.useCallback(async contractAddress => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n        const address = await signer.getAddress();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const stakeToken = await contract.stakedToken();\n        const stakeTokenContract = new Ethers.Contract(stakeToken, ERC20Abi, signer);\n\n        let decimals = ETH_TOKEN_DECIMALS;\n        if (hasString(stakeToken) && stakeToken !== ETH_TOKEN_ADDRESS) {\n            decimals = await stakeTokenContract.decimals();\n        }\n        const balance = await contract.balanceOf(address);\n        const response = Ethers.utils.formatUnits(balance, decimals);\n        return response;\n    }, []);\n\n    const stakeTokenInfo = React.useCallback(\n        async contractAddress => {\n            if (!hasString(contractAddress)) {\n                return;\n            }\n\n            if (!hasValue(ethersProvider.current)) {\n                return;\n            }\n            const signer = await ethersProvider.current?.getSigner();\n            const address = await signer.getAddress();\n\n            const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n            const stakeToken = await contract.stakedToken();\n            const stakeTokenContract = new Ethers.Contract(stakeToken, ERC20Abi, signer);\n\n            let symbol = 'ETH';\n            let decimals = ETH_TOKEN_DECIMALS;\n            if (hasString(stakeToken) && stakeToken !== ETH_TOKEN_ADDRESS) {\n                symbol = await stakeTokenContract.symbol();\n                decimals = await stakeTokenContract.decimals();\n            }\n\n            const _stakeBalance = await contract.balanceOf(address);\n            const _totalStaked = await contract.totalSupply();\n            const walletBalance = await balanceOf(stakeToken);\n            const _allowance = await allowance(stakeToken, contractAddress);\n\n            const stakeBalance = Ethers.utils.formatUnits(_stakeBalance, decimals);\n            const totalStaked = Ethers.utils.formatUnits(_totalStaked, decimals);\n\n            return {\n                address: stakeToken,\n                symbol,\n                decimals,\n                stakeBalance,\n                totalStaked,\n                walletBalance,\n                allowance: _allowance,\n            };\n        },\n        [balanceOf, allowance]\n    );\n\n    const stake = React.useCallback(async (contractAddress, value) => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const stakeToken = await contract.stakedToken();\n        const stakeTokenContract = new Ethers.Contract(stakeToken, ERC20Abi, signer);\n\n        let decimals = ETH_TOKEN_DECIMALS;\n\n        if (hasString(stakeToken) && stakeToken !== ETH_TOKEN_ADDRESS) {\n            decimals = await stakeTokenContract.decimals();\n        }\n        const gasLimit = await contract.estimateGas.stake(Ethers.utils.parseUnits(value, decimals));\n\n        let _value = 0;\n\n        if (!hasString(stakeToken) || stakeToken === ETH_TOKEN_ADDRESS) {\n            _value = Ethers.utils.parseUnits(value, ETH_TOKEN_DECIMALS);\n        }\n\n        const overrides = {\n            gasLimit: calcGasLimit(gasLimit),\n            // gasPrice: ,\n            value: _value,\n        };\n        const result = await contract.stake(Ethers.utils.parseUnits(value, decimals), overrides);\n        return result;\n    }, []);\n\n    const withdraw = React.useCallback(async (contractAddress, value) => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const stakeToken = await contract.stakedToken();\n        const stakeTokenContract = new Ethers.Contract(stakeToken, ERC20Abi, signer);\n\n        let decimals = ETH_TOKEN_DECIMALS;\n\n        if (hasString(stakeToken) && stakeToken !== ETH_TOKEN_ADDRESS) {\n            decimals = await stakeTokenContract.decimals();\n        }\n        const gasLimit = await contract.estimateGas.withdraw(Ethers.utils.parseUnits(value, decimals));\n\n        const overrides = {\n            gasLimit: calcGasLimit(gasLimit),\n            // gasPrice: ,\n        };\n        const result = await contract.withdraw(Ethers.utils.parseUnits(value, decimals), overrides);\n        return result;\n    }, []);\n\n    const earned = React.useCallback(async contractAddress => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n        const address = await signer.getAddress();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const rewardToken = await contract.rewardToken();\n        const rewardTokenContract = new Ethers.Contract(rewardToken, ERC20Abi, signer);\n\n        let decimals = ETH_TOKEN_DECIMALS;\n\n        if (hasString(rewardToken) && rewardToken !== ETH_TOKEN_ADDRESS) {\n            decimals = await rewardTokenContract.decimals();\n        }\n\n        const result = await contract.earned(address);\n\n        return Ethers.utils.formatUnits(result, decimals);\n    }, []);\n\n    const claim = React.useCallback(async contractAddress => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const gasLimit = await contract.estimateGas.claim();\n\n        const overrides = {\n            gasLimit: calcGasLimit(gasLimit),\n            // gasPrice: ,\n        };\n        const result = await contract.claim(overrides);\n\n        return result;\n    }, []);\n\n    const totalClaimed = React.useCallback(async contractAddress => {\n        if (!hasString(contractAddress)) {\n            return;\n        }\n\n        if (!hasValue(ethersProvider.current)) {\n            return;\n        }\n        const signer = await ethersProvider.current?.getSigner();\n        const address = await signer.getAddress();\n\n        const contract = new Ethers.Contract(contractAddress, AChessRewardsAbi, signer);\n\n        const rewardToken = await contract.rewardToken();\n        const rewardTokenContract = new Ethers.Contract(rewardToken, ERC20Abi, signer);\n\n        let decimals = ETH_TOKEN_DECIMALS;\n\n        if (hasString(rewardToken) && rewardToken !== ETH_TOKEN_ADDRESS) {\n            decimals = await rewardTokenContract.decimals();\n        }\n\n        const result = await contract.userClaimed(address);\n\n        return Ethers.utils.formatUnits(result, decimals);\n    }, []);\n\n    return useModel({\n        connect,\n        disconnect,\n        network,\n        address,\n        allowance,\n        approve,\n        balanceOf,\n        stakeBalanceOf,\n        stakeTokenInfo,\n        stake,\n        withdraw,\n        earned,\n        claim,\n        totalClaimed,\n    });\n}\nexport default createHookContext(useWalletModel);\n","import WalletModel from './wallet';\n\nexport default WalletModel;\n","// import _ from 'lodash';\nimport BigNumber from 'bignumber.js';\n\nimport { hasString, hasNumber } from './helper';\n\nexport const CURRENCY_PLACES = 2; // 货币精度\nexport const DECIMAL_PLACES = 8; // 小数精度\nexport const DEFAULT_NUMBER = 0; // 默认数字\nexport const MAX_NUMBER = 100000000;\n\nBigNumber.config({\n    // DECIMAL_PLACES,\n    ROUNDING_MODE: BigNumber.ROUND_DOWN,\n    EXPONENTIAL_AT: [-1e9, 1e9], // [-7, 20],\n    // RANGE: [-1e9, 1e9],\n    // CRYPTO: false,\n    // MODULO_MODE: 1,\n    // POW_PRECISION: 0,\n    // FORMAT: {\n    //   // string to prepend\n    //   prefix: '',\n    //   // decimal separator\n    //   decimalSeparator: '.',\n    //   // grouping separator of the integer part\n    //   groupSeparator: ',',\n    //   // primary grouping size of the integer part\n    //   groupSize: 3,\n    //   // secondary grouping size of the integer part\n    //   secondaryGroupSize: 0,\n    //   // grouping separator of the fraction part\n    //   fractionGroupSeparator: ' ',\n    //   // grouping size of the fraction part\n    //   fractionGroupSize: 0,\n    //   // string to append\n    //   suffix: '',\n    // },\n    // ALPHABET: '0123456789abcdefghijklmnopqrstuvwxyz',\n});\n\nexport const BLANK_CHAR = '-';\nexport const isBlankChar = value => value === BLANK_CHAR;\n\nexport const isNumeric = value => /^[-+]?([0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][-+]?[0-9]+)?$/.test(value);\nexport const isNumericString = value => hasString(value) && isNumeric(value);\nexport const isNumericValue = value => hasNumber(value) && isNumeric(value);\n\nexport const getNumberValue = value =>\n    isBlankChar(value) ? BLANK_CHAR : isNumeric(value) ? BigNumber(value).toNumber() : DEFAULT_NUMBER;\nexport const getNumberString = value =>\n    isBlankChar(value) ? BLANK_CHAR : isNumeric(value) ? BigNumber(value).toString() : `${DEFAULT_NUMBER}`;\n\nconst generateOperationFn = op => (x, y) =>\n    isBlankChar(x) || isBlankChar(y)\n        ? BLANK_CHAR\n        : isNumeric(x) && isNumeric(y)\n        ? BigNumber(x)[op](y).toString()\n        : `${DEFAULT_NUMBER}`;\n\nexport const bigPlus = generateOperationFn('plus');\nexport const bigMinus = generateOperationFn('minus');\nexport const bigMultiply = generateOperationFn('times');\nexport const bigDivide = generateOperationFn('div');\n\nexport const safeOperationFn = op => (x, y) => {\n    if (!BigNumber.isBigNumber(x) && !BigNumber.isBigNumber(y) && !isNumeric(x) && !isNumeric(y)) {\n        return BLANK_CHAR;\n    }\n    const X = BigNumber.isBigNumber(x) ? x : BigNumber(isNumeric(x) ? x : 0);\n    const Y = BigNumber.isBigNumber(y) || isNumeric(y) ? y : 0;\n    return X[op](Y).toString();\n};\nexport const safePlus = safeOperationFn('plus');\nexport const safeSub = safeOperationFn('minus');\nexport const safeMul = safeOperationFn('times');\nexport const safeDiv = safeOperationFn('div');\nexport const safePow = safeOperationFn('pow');\nexport const safeUSub = (x, y) => {\n    const result = safeSub(x, y);\n    return bigGreaterThanOrEqualTo(result, 0) ? result : '0';\n};\n\nconst generateCompareFn = op => (x, y) => {\n    try {\n        if (BigNumber.isBigNumber(x)) {\n            return x[op](y);\n        }\n\n        if (isNumeric(x)) {\n            return BigNumber(x)[op](y);\n        }\n    } catch (err) {\n        // console.log(err);\n    }\n\n    return false;\n};\n\nexport const bigGreaterThan = generateCompareFn('gt');\nexport const bigGreaterThanOrEqualTo = generateCompareFn('gte');\nexport const bigLessThan = generateCompareFn('lt');\nexport const bigLessThanOrEqualTo = generateCompareFn('lte');\n\nexport const bigToFixed = (value, dp, rm) =>\n    isBlankChar(value) ? BLANK_CHAR : isNumeric(value) ? BigNumber(value).toFixed(dp, rm) : `${DEFAULT_NUMBER}`;\n\nexport const safeMin = (x, y) => (bigLessThanOrEqualTo(x, y) ? x : y);\nexport const safeMax = (x, y) => (bigGreaterThanOrEqualTo(x, y) ? x : y);\n\nexport const safeAbs = x => (isNumeric(x) ? BigNumber(x).abs() : BLANK_CHAR);\n\nexport const safeEq = (x, y) => (isNumeric(x) && isNumeric(y) ? BigNumber(x).eq(BigNumber(y)) : false);\n\nexport const SafeBigNumber = value => {\n    if (BigNumber.isBigNumber(value)) {\n        return BigNumber(value.toString());\n    }\n    return BigNumber(value);\n};\n\nexport const operationFn = op => (x, y) => {\n    if (!isNumeric(x) || !isNumeric(y)) {\n        return BLANK_CHAR;\n    }\n    const X = BigNumber.isBigNumber(x) ? x : BigNumber(x);\n    const Y = BigNumber.isBigNumber(y) ? y : BigNumber(y);\n    return X[op](Y).toString();\n};\nexport const plus = operationFn('plus');\nexport const sub = operationFn('minus');\nexport const mul = operationFn('times');\nexport const div = operationFn('div');\nexport const pow = operationFn('pow');\n","import _ from 'lodash';\nimport BigNumber from 'bignumber.js';\n// import Moment from 'moment';\n\nimport { hasString, hasValue, mergeObject } from './helper';\nimport { BLANK_CHAR, isNumeric } from './operation';\n\n// export const FIAT_PRECISION = 2; // 法币精度\n// export const DECIMAL_PRECISION = 8; // 小数精度\n\n// Big.DP = DECIMAL_PRECISION; // 小数精度\n// Big.RM = 0; // 向下取整\n// 向下取整\n// 0\tRounds towards zero.I.e. truncate, no rounding.\tROUND_DOWN\n// 四舍五入\n// 1\tRounds towards nearest neighbour.If equidistant, rounds away from zero.\tROUND_HALF_UP\n// 银行家舍入\n// 2\tRounds towards nearest neighbour.If equidistant, rounds towards even neighbour.\tROUND_HALF_EVEN\n// 向上取整\n// 3\tRounds away from zero.\tROUND_UP\n// const ROUNDING_MODE = _.floor;\n\n// 时间日期格式\nexport const DateFormat = {\n    DATE: 'YYYY-MM-DD',\n    SHORT_DATE: 'MM-DD',\n    LOCALE_DATE: 'LLL',\n    TIME: 'HH:mm:ss',\n    SHORT_TIME: 'HH:mm',\n    DATE_AND_TIME: 'YYYY-MM-DD HH:mm:ss',\n    SHORT_DATE_AND_TIME: 'MM-DD HH:mm:ss',\n};\n\nexport function str2int(value) {\n    if (isBlankChar(value)) {\n        return BLANK_CHAR;\n    }\n\n    if (!hasValue(value)) {\n        return 0;\n    }\n\n    const val = `${value}`;\n    if (!hasString(val)) {\n        return 0;\n    }\n    const res = parseInt(val, 10);\n    return _.isNaN(res) ? 0 : res;\n}\n\nexport function str2float(value) {\n    if (isBlankChar(value)) {\n        return BLANK_CHAR;\n    }\n\n    if (!hasValue(value)) {\n        return 0;\n    }\n\n    const val = `${value}`;\n    if (!hasString(val)) {\n        return 0;\n    }\n    const res = parseFloat(val);\n    return _.isNaN(res) ? 0 : res;\n}\n\n// export const formatBytes = (value, format = '0 b') => numeralFormat(value, format);\n// export const formatExponential = (value, format = '0.00e+0') => numeralFormat(value, format);\n\n// export function formatDate(value, type = 'DATE_AND_TIME') {\n//     if (!hasString(type)) {\n//         return BLANK_CHAR;\n//     }\n\n//     const format = DateFormat[type];\n//     if (!hasString(format)) {\n//         return BLANK_CHAR;\n//     }\n\n//     try {\n//         return (hasValue(value) ? Moment(value) : Moment()).format(format);\n//     } catch (error) {\n//         return _.replace(format, /[A-Za-z0-9]/g, BLANK_CHAR);\n//     }\n// }\n\nexport const isBlankChar = value => value === BLANK_CHAR;\n\n/** ---新版格式化--- **/\n\nconst bigNumberFormat = options => {\n    const { approximate, thousands, prefix, suffix } = options;\n    return {\n        prefix: approximate ? '≈ ' : prefix,\n        decimalSeparator: '.',\n        groupSeparator: ',',\n        groupSize: thousands ? 3 : 0,\n        secondaryGroupSize: 0,\n        fractionGroupSeparator: ' ',\n        fractionGroupSize: 0,\n        suffix: suffix,\n    };\n};\n\nexport const getRoundDownFormats = (value, places = 8) => {\n    let formats = { string: value, approximate: false };\n    if (isNumeric(value) || BigNumber.isBigNumber(value)) {\n        const number = new BigNumber(value);\n        formats.string = number.decimalPlaces(places, BigNumber.ROUND_DOWN).toString();\n        formats.approximate = number.decimalPlaces() > places;\n    }\n    return formats;\n};\n\nexport const formatNumber4Loans = (value, options = {}) => {\n    const opts = mergeObject({ places: 8, thousands: false, approximate: false }, options);\n    const { rm = BigNumber.ROUND_DOWN } = options;\n    if (!isNumeric(value) && !BigNumber.isBigNumber(value)) {\n        return opts.nilDisabled ? value : BLANK_CHAR;\n    }\n    const fmt = bigNumberFormat(opts);\n    const number = new BigNumber(value);\n    return number.decimalPlaces(opts.places, rm).toFormat(fmt);\n};\n\nexport const formatPercentages4Loans = (value, options = {}) => {\n    const { sign = false } = options;\n    const { rm = BigNumber.ROUND_DOWN } = options;\n    const opts = mergeObject({ places: 2, thousands: false, suffix: '%' }, options);\n    if (!isNumeric(value)) {\n        return opts.nilDisabled ? value : BLANK_CHAR;\n    }\n    const number = new BigNumber(value);\n    const numberFormat = number.times(100).decimalPlaces(opts.places, rm);\n    if (sign) {\n        const zero = new BigNumber('0');\n        if (numberFormat.comparedTo(zero) > 0) {\n            opts.prefix = '+';\n        } else if (numberFormat.comparedTo(zero) < 0) {\n            opts.prefix = '';\n        } else {\n            opts.prefix = '';\n        }\n    }\n    const fmt = bigNumberFormat(opts);\n    return numberFormat.toFormat(fmt);\n};\n\nexport const SUPPORT_FIATS_SYMBOL = { USD: '$', CNY: '¥' };\n\nexport const formatCurrency4Loans = (value, options = {}) => {\n    const opts = mergeObject({ places: 2, thousands: false, prefix: '$ ' }, options);\n    const { rm = BigNumber.ROUND_DOWN } = options;\n    if (!isNumeric(value)) {\n        return opts.nilDisabled ? value : BLANK_CHAR;\n    }\n    const number = new BigNumber(value);\n    if (number.gt(0) && opts.places === 2) {\n        if (number.lt(0.001)) {\n            opts.places = 4;\n        } else if (number.lt(0.01)) {\n            opts.places = 3;\n        }\n    }\n    const fmt = bigNumberFormat(opts);\n    return number.decimalPlaces(opts.places, rm).toFormat(fmt);\n};\n\nexport const formatNumberAverage4Loans = (number, options = {}) => {\n    if (!isNumeric(number)) {\n        return options.nilDisabled ? number : BLANK_CHAR;\n    }\n    const { digits = 3, rm = BigNumber.ROUND_HALF_EVEN } = options;\n    const si = [\n        { value: '1', symbol: '' },\n        { value: '1E3', symbol: 'K' },\n        { value: '1E6', symbol: 'M' },\n        { value: '1E9', symbol: 'B' },\n        { value: '1E12', symbol: 'T' },\n        { value: '1E15', symbol: 'P' },\n        { value: '1E18', symbol: 'E' },\n    ];\n    let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n    let i;\n    let div;\n    const num = new BigNumber(number);\n    for (i = si.length - 1; i > 0; i--) {\n        div = new BigNumber(si[i].value);\n        if (num.comparedTo(div) >= 0) {\n            break;\n        }\n    }\n    div = new BigNumber(si[i].value);\n    return num.div(div).toFixed(digits, rm).replace(rx, '$1') + si[i].symbol;\n};\n\nexport const formatCurrencyAverage4Loans = (number, options = {}) => {\n    if (!isNumeric(number)) {\n        return options.nilDisabled ? number : BLANK_CHAR;\n    }\n    const { prefix = '$ ' } = options;\n    const average = formatNumberAverage4Loans(number, options);\n    return `${prefix}${average}`;\n};\n\nexport const formatSymbol = symbol => _.replace(symbol ?? '', /-[\\s\\S]*/, '');\n","import _ from 'lodash';\n\nimport { hasString, hasNumber, mergeObject } from './helper';\nimport { formatNumber4Loans } from './format';\nimport { isNumeric, bigLessThan, bigGreaterThan, bigToFixed, getNumberValue } from './operation';\n\n// 只显示整数部分\nexport const formatInteger = (value, options = {}) =>\n    formatNumber4Loans(value, mergeObject({}, options, { places: 0 }));\n// 无小数位也显示\nexport const formatFloat = (value, options = {}) =>\n    formatNumber4Loans(value, mergeObject({}, options, { placeholder: true }));\n\n// eslint-disable-next-line max-params\nexport function formatNumberInputValue(value, precision, min, max) {\n    if (!hasString(value)) {\n        return value;\n    }\n\n    // 删除非数字和小数点的字符\n    const step01 = _.replace(`${value}`, /[^\\d.]/g, '');\n    // 过滤多个小数点，只保留第一个小数点\n    const step02 = _.split(step01, '.');\n    const step03 = step02.length > 2 ? `${step02[0]}.${_.join(_.slice(step02, 1), '')}` : step01;\n    // 保留小数精度\n    const step04 = _.split(step03, '.');\n    const step05 =\n        precision > 0 && step04.length > 1 && step04[1].length > precision\n            ? `${step04[0]}.${step04[1].substring(0, precision)}`\n            : precision === 0\n            ? step04[0]\n            : step03;\n    // 最小值\n    const step06 = isNumeric(min) && bigLessThan(step05, min) ? bigToFixed(min) : step05;\n    // 最大值\n    const step07 = isNumeric(max) && bigGreaterThan(step06, max) ? bigToFixed(max) : step06;\n    // console.log(value, step01, step02, step03, step04, step05, step06, step07);\n    return `${step07}`;\n}\n\n// eslint-disable-next-line max-params\nexport function ellipsizeText(text, max, mode = 'tail', symbol = '…') {\n    if (!hasString(text) || !hasNumber(max) || !hasString(symbol)) {\n        return text;\n    }\n\n    const maxLength = getNumberValue(max);\n    if (text.length <= maxLength || symbol.length >= maxLength) {\n        return text;\n    }\n\n    const over = maxLength - symbol.length;\n    const startAt = getNumberValue(over / 2) + (over % 2);\n\n    let result = text;\n    switch (mode) {\n        case 'head':\n            result = `${symbol}${text.slice(text.length - over)}`;\n            break;\n        case 'middle':\n            result = `${text.slice(0, startAt)}${symbol}${text.slice(startAt === over ? text.length : startAt - over)}`;\n            break;\n        case 'tail':\n        default:\n            result = `${text.slice(0, over)}${symbol}`;\n            break;\n    }\n    return result;\n}\n","import _ from 'lodash';\nimport React from 'react';\nimport logo from './logo.png';\n// import './App.css';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/less/bootstrap.less';\nimport './App.less';\nimport WalletModel from './wallet';\nimport { ellipsizeText, formatNumberInputValue } from './utils/input';\nimport { getAddress } from './utils/store';\nimport { hasString, getValue } from './utils/helper';\nimport { formatNumber4Loans } from './utils/format';\nimport { bigGreaterThanOrEqualTo, bigGreaterThan, BLANK_CHAR, isNumeric, safeSub } from './utils/operation';\nimport { MAX_UINT256, useIntervalRefresh } from './wallet/tools';\n\nconst TARGET_CHAINID = [42161];\n\nconst Header = React.memo(props => {\n    const { connect, address, network } = WalletModel.useContext();\n    const handleClick = React.useCallback(() => {\n        if (!hasString(address)) {\n            connect();\n        }\n    }, [connect, address]);\n\n    let text = 'Connect';\n    if (hasString(address)) {\n        if (_.includes(TARGET_CHAINID, network?.chainId)) {\n            text = ellipsizeText(address, 12, 'middle');\n        } else {\n            text = 'Wrong Network';\n        }\n    }\n\n    return (\n        <div className=\"aHeader\">\n            <img className=\"logoImg\" src={logo} alt=\"logo\" />\n            <button type=\"button\" className=\"btn btn-default\" onClick={handleClick}>\n                {text}\n            </button>\n        </div>\n    );\n});\n\nconst Pool = React.memo(props => {\n    const { data } = props ?? {};\n    const { address, network, approve, stakeTokenInfo, stake, withdraw, earned, claim, totalClaimed } =\n        WalletModel.useContext();\n\n    const verify = React.useCallback(() => {\n        if (!hasString(address)) {\n            alert('connect wallet first');\n            return false;\n        }\n        if (!_.includes(TARGET_CHAINID, network?.chainId)) {\n            alert('wrong network');\n            return false;\n        }\n        return true;\n    }, [network, address]);\n\n    const [stakeToken, setStakeToken] = React.useState();\n    const [earn, setEarn] = React.useState();\n\n    const refresh = React.useCallback(async () => {\n        try {\n            const _stakeToken = await stakeTokenInfo(data?.contract);\n            setStakeToken(_stakeToken);\n            const _earn = await earned(data?.contract);\n            const _claimed = await totalClaimed(data?.contract);\n            setEarn(safeSub(_earn, _claimed));\n        } catch (err) {\n            // console.log(err);\n        }\n    }, [stakeTokenInfo, earned, data, totalClaimed]);\n\n    useIntervalRefresh(refresh);\n\n    const [stakeAmount, setStakeAmount] = React.useState('');\n    const handleStakeInput = React.useCallback(\n        event => {\n            const newValue = _.trim(`${getValue(event, 'target.value', '')}`);\n            const value = formatNumberInputValue(newValue, stakeToken?.decimals);\n            setStakeAmount(value);\n        },\n        [stakeToken]\n    );\n\n    const handleStakeAll = React.useCallback(() => {\n        setStakeAmount(stakeToken?.walletBalance);\n    }, [stakeToken]);\n\n    const [withdrawAmount, setWithdrawAmount] = React.useState('');\n    const handleWithdrawInput = React.useCallback(\n        event => {\n            const newValue = _.trim(`${getValue(event, 'target.value', '')}`);\n            const value = formatNumberInputValue(newValue, stakeToken?.decimals);\n            setWithdrawAmount(value);\n        },\n        [stakeToken]\n    );\n\n    const handleWithdrawAll = React.useCallback(() => {\n        setWithdrawAmount(stakeToken?.stakeBalance);\n    }, [stakeToken]);\n\n    const handleApprove = React.useCallback(async () => {\n        if (!verify()) {\n            return;\n        }\n        try {\n            const tx = await approve(stakeToken?.address, data?.contract, MAX_UINT256);\n            await tx?.wait();\n            const _stakeToken = await stakeTokenInfo(data?.contract);\n            setStakeToken(_stakeToken);\n        } catch (err) {\n            // console.log(err);\n            alert(err?.message);\n        }\n    }, [verify, approve, stakeToken, data, stakeTokenInfo]);\n\n    const handleStake = React.useCallback(async () => {\n        if (!verify()) {\n            return;\n        }\n        try {\n            if (bigGreaterThan(stakeAmount, stakeToken?.walletBalance)) {\n                alert('Balance not enough');\n                return;\n            }\n            const tx = await stake(data?.contract, stakeAmount);\n            await tx?.wait();\n            setStakeAmount('');\n            const _stakeToken = await stakeTokenInfo(data?.contract);\n            setStakeToken(_stakeToken);\n        } catch (err) {\n            // console.log(err);\n            alert(err?.message);\n        }\n    }, [verify, stakeToken, stake, data, stakeAmount, stakeTokenInfo]);\n\n    const handleWithdraw = React.useCallback(async () => {\n        if (!verify()) {\n            return;\n        }\n        try {\n            if (bigGreaterThan(withdrawAmount, stakeToken?.stakeBalance)) {\n                alert('Withdraw exceeding your stake balance');\n                return;\n            }\n            const tx = await withdraw(data?.contract, withdrawAmount);\n            await tx?.wait();\n            setWithdrawAmount('');\n            const _stakeToken = await stakeTokenInfo(data?.contract);\n            setStakeToken(_stakeToken);\n        } catch (err) {\n            // console.log(err);\n            alert(err?.message);\n        }\n    }, [verify, stakeToken, withdraw, data, withdrawAmount, stakeTokenInfo]);\n\n    const handleClaim = React.useCallback(async () => {\n        if (!verify()) {\n            return;\n        }\n        try {\n            const tx = await claim(data?.contract);\n            await tx?.wait();\n            const _stakeToken = await stakeTokenInfo(data?.contract);\n            setStakeToken(_stakeToken);\n        } catch (err) {\n            // console.log(err);\n            alert(`reward claimed hasn't started yet`);\n        }\n    }, [verify, claim, data, stakeTokenInfo]);\n\n    const stakeSymbol = hasString(stakeToken?.symbol) ? stakeToken?.symbol : BLANK_CHAR;\n\n    let approveVerify = false;\n    if (hasString(stakeAmount)) {\n        approveVerify = bigGreaterThanOrEqualTo(stakeToken?.allowance, stakeAmount);\n    } else {\n        approveVerify = bigGreaterThan(stakeToken?.allowance, 0);\n    }\n    if (data?.noneedApprove) {\n        approveVerify = true;\n    }\n\n    return (\n        <div className=\"panel panel-primary\">\n            <div className=\"panel-heading\">\n                <h3 className=\"panel-title\">\n                    {`${data?.name} Pool`}\n                    <i className=\"smalli\">FARM</i>\n                </h3>\n            </div>\n            <div className=\"panel-body\">\n                <b>APR: </b>NaN\n            </div>\n            <div className=\"aRow1\">\n                {approveVerify ? (\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleStake}\n                        disabled={!isNumeric(stakeAmount) || bigGreaterThanOrEqualTo(0, stakeAmount)}\n                    >\n                        Stake\n                    </button>\n                ) : (\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleApprove}>\n                        Approve\n                    </button>\n                )}\n                <div className=\"A-input-group\">\n                    <input type=\"text\" className=\"A-form-control\" value={stakeAmount} onChange={handleStakeInput} />\n                    <span className=\"A-input-group-addon\" onClick={handleStakeAll}>\n                        MAX\n                    </span>\n                </div>\n            </div>\n            <div className=\"aRow1\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={handleWithdraw}\n                    disabled={!isNumeric(withdrawAmount) || bigGreaterThanOrEqualTo(0, withdrawAmount)}\n                >\n                    Withdraw\n                </button>\n                <div className=\"A-input-group\">\n                    <input\n                        type=\"text\"\n                        className=\"A-form-control\"\n                        value={withdrawAmount}\n                        onChange={handleWithdrawInput}\n                    />\n                    <span className=\"A-input-group-addon\" onClick={handleWithdrawAll}>\n                        MAX\n                    </span>\n                </div>\n            </div>\n            <div className=\"aRow2\">\n                <div>Your Stake:</div>\n                <div>{`${formatNumber4Loans(stakeToken?.stakeBalance)} ${stakeSymbol}`}</div>\n            </div>\n            <div className=\"aRow2\">\n                <div>Your Rewards:</div>\n                <div className=\"aRow4\">\n                    <div>{`${formatNumber4Loans(earn)} ACHESS`}</div>\n                    <button type=\"button\" className=\"btn btn-default claimBtn\" onClick={handleClaim}>\n                        Claim\n                    </button>\n                </div>\n            </div>\n            <div className=\"aRow2\">\n                <div>{`${data?.name} Balance:`}</div>\n                <div>{`${formatNumber4Loans(stakeToken?.walletBalance)} ${stakeSymbol}`}</div>\n            </div>\n            <div className=\"aRow2\">\n                <div>Total Staked:</div>\n                <div>{`${formatNumber4Loans(stakeToken?.totalStaked)} ${stakeSymbol}`}</div>\n            </div>\n            {data?.extra}\n        </div>\n    );\n});\n// const Status = React.memo(props => {\n//     const { tvl } = props ?? {};\n//     return (\n//         <div className=\"panel panel-primary\">\n//             <div className=\"aRow3\">\n//                 <div>TVL: </div>\n//                 <div>{tvl}</div>\n//             </div>\n//             <div className=\"aRow2\">\n//                 <div>ACHESS Price:</div>\n//                 <div>$0.005</div>\n//             </div>\n//             <div className=\"aRow2\">\n//                 <div>Circulating Supply:</div>\n//                 <div>2004220 ACHESS</div>\n//             </div>\n//             <div className=\"aRow2\">\n//                 <div>Circulating Market Cap:</div>\n//                 <div>$11,892,914.25</div>\n//             </div>\n//         </div>\n//     );\n// });\n\nconst Footer = React.memo(props => {\n    return (\n        <div className=\"jumbotron text-center\" style={{ padding: 0 }}>\n            <p>\n                {' '}\n                <a href=\"https://bridge.arbitrum.io/\" target=\"_blank\" rel=\"noreferrer\">\n                    Bridge\n                </a>{' '}\n                |{' '}\n                <a href=\"https://twitter.com/ArbiChess1\" target=\"_blank\" rel=\"noreferrer\">\n                    Twitter\n                </a>{' '}\n                |{' '}\n                <a href=\"https://t.me/arbichess\" target=\"_blank\" rel=\"noreferrer\">\n                    Telegram\n                </a>{' '}\n                {/* |{' '}\n                <a href=\"./info.html\" target=\"_blank\">\n                    Info\n                </a> */}\n            </p>\n        </div>\n    );\n});\n\nconst AutoConnect = React.memo(props => {\n    const { connect } = WalletModel.useContext();\n    if (hasString(getAddress())) {\n        connect();\n    }\n    return null;\n});\n\nfunction App() {\n    const pools = [\n        {\n            name: 'ETH',\n            contract: '0x0583da6ad17b11fe8de5266f1ab6effd1bc32606',\n            noneedApprove: true,\n            extra: (\n                <div className=\"warningWrap\">\n                    <div className=\"warning\">Warning:</div>\n                    <div>Don't transfer ETH to the contract address directly!</div>\n                </div>\n            ),\n        },\n        {\n            name: 'ETH-USDC SushiSwap LP',\n            contract: '0xdCf2A9201EA7de72365D2700fbAac236401b0372',\n            extra: (\n                <a\n                    className=\"A-link\"\n                    href=\"https://app.sushi.com/add/ETH/0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    Create LP tokens manually from USDC and ETH\n                </a>\n            ),\n        },\n        {\n            name: 'NYAN',\n            contract: '0xFce167AbB2441073ed9c38Ba597495eA701d41d9',\n        },\n        {\n            name: 'pETH',\n            contract: '0xa3687e57eb5f1557bb2790795fa98a08dce27446',\n        },\n        {\n            name: 'WBTC',\n            contract: '0x8ab3802a9EE39D3dD1D9Dd7aB4e1eadE88ee64AC',\n        },\n        {\n            name: 'ACHESS-USDC SUSHI LP',\n            contract: '0xbDfC339AA2FF81A0117e5E60E148489961711Fd7',\n            extra: (\n                <a\n                    className=\"A-link\"\n                    href=\"https://app.sushi.com/add/0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8/0xd713d9914F6730246C900C5ca0a8752959367A30\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    Create LP tokens manually from ACHESS and USDC\n                </a>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"App\">\n            <AutoConnect />\n            <Header />\n            <div className=\"AContent\">\n                {_.map(pools, (pool, index) => (\n                    <Pool data={pool} key={index} />\n                ))}\n                {/* <Status /> */}\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport WalletModel from './wallet';\n\nReactDOM.render(\n    <React.StrictMode>\n        <WalletModel.Provider>\n            <App />\n        </WalletModel.Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}